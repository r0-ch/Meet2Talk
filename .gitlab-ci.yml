stages:
- calculate_tag
- build_dev
- build_prod
- deploy_dev
- deploy_prod

workflow:
  rules:
  - if: $CI_COMMIT_MESSAGE =~ /\s*-k8s\s*$/

calculate_tag:
  stage: calculate_tag
  script:
  - apk add --no-cache jq bash curl
  - chmod +x increment_version.sh
  - |
    if [[ "$CI_COMMIT_BRANCH" == "main" ]]; then
      ./increment_version.sh major
    elif [[ "$CI_COMMIT_BRANCH" == "dev" ]]; then
      ./increment_version.sh minor
    else
      ./increment_version.sh patch
    fi
  artifacts:
    paths:
    - NEW_TAG
    expire_in: 1 hour

build_dev:
  stage: build_dev
  image: gcr.io/kaniko-project/executor:v1.11.0-debug
  script:
  - TAG=$(cat NEW_TAG)
  - echo TAG
  - echo "Construction de l'application pour l'environnement de développement..."
  - 'echo "{\"auths\":{\"https://index.docker.io/v1/\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}"> /kaniko/.docker/config.json'
  - /kaniko/executor --context ./pli --build-arg VITE_REACT_APP_BACKEND=https://pli-dev.ketsuna.com --dockerfile Dockerfile --destination crissime/pli-front:${TAG} --cache=true
  - /kaniko/executor --context ./signaling --build-arg CORS_ORIGIN=https://pli-dev.ketsuna.com --dockerfile Dockerfile --destination crissime/pli-back:${TAG} --cache=true
  rules:
  - if: $CI_COMMIT_BRANCH != "main"

build_prod:
  stage: build_prod
  image: gcr.io/kaniko-project/executor:v1.11.0-debug
  script:
  - TAG=$(cat NEW_TAG)
  - echo "Construction de l'application pour l'environnement de production..."
  - 'echo "{\"auths\":{\"https://index.docker.io/v1/\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}"> /kaniko/.docker/config.json'
  - /kaniko/executor --context ./pli --build-arg VITE_REACT_APP_BACKEND=https://pli-prod.ketsuna.com --dockerfile Dockerfile --destination crissime/pli-front:${TAG} --cache=true
  - /kaniko/executor --context ./signaling --build-arg CORS_ORIGIN=https://pli-prod.ketsuna.com --dockerfile Dockerfile --destination crissime/pli-back:${TAG} --cache=true
  rules:
  - if: $CI_COMMIT_BRANCH == "main"


deploy_to_dev:
  stage: deploy_dev
  image: bitnami/kubectl:latest
  script:
  - TAG=$(cat NEW_TAG)
  - cat $KUBECONFIG_DATA | base64 -d > kubeconfig
  - export KUBECONFIG=$CI_PROJECT_DIR/kubeconfig
  - echo "Mise à jour des images pour l'environnement de développement..."
  - 'sed -i "s|image: crissime/pli-front:.*|image: crissime/pli-front:${TAG}|g" k8s-dev/front/deploy_front.yaml'
  - 'sed -i "s|image: crissime/pli-back:.*|image: crissime/pli-back:${TAG}|g" k8s-dev/backend/deploy_back.yaml'
  - kubectl apply -f k8s-dev/front --namespace=dev
  - kubectl apply -f k8s-dev/backend --namespace=dev
  rules:
  - if: $CI_COMMIT_BRANCH != "main"

deploy_to_prod:
  stage: deploy_prod
  image: bitnami/kubectl:latest
  script:
  - TAG=$(cat NEW_TAG)
  - cat $KUBECONFIG_DATA | base64 -d > kubeconfig
  - export KUBECONFIG=$CI_PROJECT_DIR/kubeconfig
  - echo "Mise à jour des images pour l'environnement de production..."
  - 'sed -i "s|image: crissime/pli-front:.*|image:crissime/pli-front:${TAG}|g" k8s-prod/front/deploy_front.yaml'
  - 'sed -i "s|image: crissime/pli-back:.*|image:crissime/pli-back:${TAG}|g" k8s-prod/backend/deploy_back.yaml'
  - kubectl apply -f k8s-prod/front --namespace=prod
  - kubectl apply -f k8s-prod/backend --namespace=prod
  rules:
  - if: $CI_COMMIT_BRANCH == "main"
