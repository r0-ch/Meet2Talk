apiVersion: v1
kind: ConfigMap
metadata:
    name: conf-nginx
data:
    http.conf: |
        server {
                listen 80;
                server_name pli.ketsuna.com;

                # Redirection de HTTP vers HTTPS
                return 301 https://$host$request_uri;
            }

            server {
                listen 443 ssl;
                server_name pli.ketsuna.com;

                # Chemins vers les certificats SSL
                ssl_certificate /etc/nginx/certs/server-cert.pem;  # Chemin vers le certificat SSL
                ssl_certificate_key /etc/nginx/certs/server-key.pem;  # Chemin vers la clé privée SSL

                # Dossier racine pour servir votre application React
                root /usr/share/nginx/html;
                index index.html;

                location / {
                    try_files $uri $uri/ /index.html;  # Serve l'application React
                }

                location /socket.io/ {
                    proxy_pass http://backend-svc:8000/socket.io/;  # Assurez-vous que le chemin correspond
                    proxy_http_version 1.1;
                    proxy_set_header Upgrade $http_upgrade;        # Nécessaire pour WebSocket
                    proxy_set_header Connection "Upgrade";         # Nécessaire pour WebSocket
                    proxy_set_header Host $host;
                    proxy_cache_bypass $http_upgrade;

                    # Transmission des en-têtes requis
                    proxy_set_header X-Real-IP $remote_addr;
                    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                    proxy_set_header X-Forwarded-Proto $scheme;
                }

                location /socket.io/whisper/ {
                    proxy_pass http://192.168.1.186:5000/socket.io/whisper/;  # Assurez-vous que le chemin correspond
                    proxy_http_version 1.1;
                    proxy_set_header Upgrade $http_upgrade;        # Nécessaire pour WebSocket
                    proxy_set_header Connection "Upgrade";         # Nécessaire pour WebSocket
                    proxy_set_header Host $host;
                    proxy_cache_bypass $http_upgrade;

                    # Transmission des en-têtes requis
                    proxy_set_header X-Real-IP $remote_addr;
                    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                    proxy_set_header X-Forwarded-Proto $scheme;
                }                

                location /api/ {
                    proxy_pass http://backend-svc:8000/;  # Assurez-vous que le chemin correspond
                    proxy_http_version 1.1;
                    proxy_set_header Upgrade $http_upgrade;        # Nécessaire pour WebSocket
                    proxy_set_header Connection "Upgrade";         # Nécessaire pour WebSocket
                    proxy_set_header Host $host;
                    proxy_cache_bypass $http_upgrade;

                    # Transmission des en-têtes requis
                    proxy_set_header X-Real-IP $remote_addr;
                    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                    proxy_set_header X-Forwarded-Proto $scheme;
                }

                error_page 404 /404.html;  # Page d'erreur personnalisée
            }
